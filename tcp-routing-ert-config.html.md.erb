---
breadcrumb: <%= vars.platform_name %> Documentation
title: Configuring TCP Routing in PAS
owner: Routing
---

This topic describes how to enable the TCP routing feature in a <%= vars.app_runtime_full %> (<%= vars.app_runtime_abbr %>) deployment.

<p class='note breaking'><strong>Breaking Change:</strong> If you have mutual TLS app identity verification enabled, Envoy only recognizes communications from the Gorouter. Therefore, TCP no longer works.</p>


## <a id="overview"></a> Overview

TCP routing enables apps that require inbound requests on non-HTTP protocols to run on <%= vars.platform_name %>.


## <a id="prerequisite"></a> Prerequisite

Before enabling TCP routing, review the pre-deployment steps that describe required networking infrastructure changes. For more information, see [Pre-Deployment Steps](../adminguide/enabling-tcp-routing.html#pre-deploy) in _Enabling TCP Routing_.


## <a id="enable-tcp"></a> Enable TCP Routing

TCP routing is disabled by default. 

To enable TCP routing:

1. Navigate to the <%= vars.ops_manager_full %> Installation Dashboard.

1. Click the <%= vars.app_runtime_abbr %> tile.

1. Select **Networking**.

1. Under **Enable TCP requests to apps through specific ports on the TCP router**, select **Enable TCP routing**.

1. For **TCP router IPs**, enter the IP addresses to assign to the TCP routers. You can enter multiple values as a comma-separated list or as a range. For example, `10.254.0.1, 10.254.0.2` or `10.254.0.1-10.254.0.2`. The addresses must be within your subnet CIDR block. These are the same IP addresses with which you configured your load balancer in [Pre-Deployment Steps](../adminguide/enabling-tcp-routing.html#pre-deploy) in _Enabling TCP Routing_, unless you configured DNS to resolve the TCP domain name directly to an IP for the TCP router. 

1. For **TCP routing ports**, enter one or more ports to which the load balancer forwards requests. To support multiple TCP routes, <%= vars.recommended_by %> recommends allocating multiple ports. Do one of the following:
    * To allocate a single port or range of ports, enter a single port or a range of ports.  
      <p class="note"><strong>Note:</strong> If you configured AWS for <%= vars.app_runtime_abbr %> manually, enter <code>1024-1123</code> which corresponds to the rules you created for <code><%= vars.product_name_lc %>-tcp-elb</code>.</p>
    * To allocate a list of ports:
      1. Enter a single port in the **TCP routing ports** field.
      1. After deploying <%= vars.app_runtime_abbr %>, follow the procedure in [Configuring a List of TCP Routing Ports](https://docs.pivotal.io/pivotalcf/2-3/pcf-release-notes/runtime-rn.html#tcp-port-config) in _<%= vars.app_runtime_full %> v2.3 Release Notes_ to add TCP routing ports using the cf CLI.

1. (Optional) For **TCP request timeout**, modify the default value of `300` seconds. This field determines when the TCP router closes idle connections from clients to apps that use TCP routes. You may want to increase this value to enable developers to push apps that require long-running idle connections with clients.

1. For **AWS**, **Azure**, or **GCP** <%= vars.platform_name %> deployments, add the name of your load balancer to the **TCP Router** field in the **Resource Config** pane of the <%= vars.app_runtime_abbr %> tile. For more information, see [Configuring Load Balancing for <%= vars.app_runtime_abbr %>](configure-lb.html).


## <a id="disable-tcp"></a> Disable TCP Routing

To disable TCP routing:

1. Navigate to the <%= vars.ops_manager_full %> Installation Dashboard.

1. Click the <%= vars.app_runtime_abbr %> tile.

1. Select **Networking**.

1. Under **Enable TCP requests to apps through specific ports on the TCP router**, select **Disable TCP routing**.

1. Manually remove the TCP routing domain.
